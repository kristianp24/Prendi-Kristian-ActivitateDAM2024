onCreate() -> ocupa spatiul de memorie pt activitatea aferenta
onStart() -> afiseaza activitatea pe ecran
onResume() -> face activittea activa, utilizatorul se poate sa reactioneze, devine activa

onPause() -> devine inactiva dar vziibila
onStop() -> nu mai e nici vizibila
onDestroy() => o distruge din memorie acitvitatea

Aplicatiile sunt adaugate in stiva, in mom in care nu mai are memorie unde sa deschida aplicatie, ia stiva de activitati
si daca nu e folosirde un anumit timp se apleaza onDestroy() pe aplicatia respectiva.

Log.e() -> log de eroare
lOG.W()-> log de warning
log.d() -> log de debugging
log.i()-> log de info

Cand se lanseaza sunt apelate onCreate(), onStart(), onResume()
Context -> reprezinta contextul, adica activitatea curenta in acel moment.

Seminar 3
Bundle este o metadata, Sunt transmite metadate. Datele transmise sunt primitive, obiectele treb sa fie serializabile.

Seminar 4
Properties:
:gravity : cum o sa fie afisat continutul
:layout_gravity: cum o sa fie centrat butonul, nu textul in el
Activ se deschide in mod independent si dependent (astept ca o activitate sa dea un rezultat)
startActivity() deschide in mod independent


setResult (RESULT_OK, it) => Anunta activitatea curenta pentru a intoarce inapoi
 rezultatea catre activitatea care a chemat o.
RESULT_OK => anunta ca activitatea/ operatia a fost finalizata cu succes, adica activitatea curenta are niste date pentru a le trimite la activitatea anteriaora.
finish(); => inchide activitatea curenta si se intoarce la activitatea care a apelat o. (NU TREBUIE UITAT)

startActivityForResult(intent, 123) => incepe o noua activitate cu asteptarea ca aceasta activitate va intoarce niste data inapoi, 123 este un id (in caz ca sunt apelate mai multe activities sa stim care e cine)
onActivityResult() => apelat automat cand activitatea chemata de la startActivityForResult() termina si trimite inapoi datele.
Parcelable => Este o interfata care ii permite obiectului sa fie trimis intre activitati (un fel de serializare si deserializare)

Creare/Populare ListView.
Se asigneaza ca orice clasa din UI, cu findViewById()
Trebuie un ArrayAdapter<> pentru a scrie obiectele in ListView
android.R.layout.simple_list_item_1, layout pt o liste simpla cu un singur text
listView.setAdapter(adapter) => ii spune lui ListView ca sa foloseasca acest adapter pentri a lua si gestiona datele

Seminar 8
Executor -> ne duce in firul secundar
Handler -> asigura intoarcerea la cel principal
BitMapFactory -> ca sa decodam imaginile.
Looper -> se ocupa pentru a crea un join intre cele 2 threaduri
